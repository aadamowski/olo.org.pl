{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js","webpack:///./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/templates/posts.js"],"names":["SEO","description","lang","meta","keywords","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","Footer","socialLinks","css","mt","pt","map","platform","i","arr","key","url","a","href","target","rel","Posts","location","posts","siteTitle","node","slug","h2","mb","as","Link","textDecoration","to","date","p","excerpt","pathContext"],"mappings":"2FAAA,2DAYA,SAASA,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACxCC,EAASC,YAAe,YAAxBD,KAcFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACE,YAAC,IAAD,CACES,eAAgB,CACdR,QAEFG,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCF,KAAM,CACJ,CACES,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAGVQ,OACCZ,EAASa,OAAS,EACd,CACEL,KAAK,WACLC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGJ,O,iICzEAoB,EArBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,sBACEC,IAAKA,YAAI,CACPC,GAAI,EACJC,GAAI,KAGLH,EAAYI,KAAI,SAACC,EAAUC,EAAGC,GAAd,OACf,YAAC,WAAD,CAAUC,IAAKH,EAASI,KACtB,YAAC,IAAOC,EAAR,CAAUC,KAAMN,EAASI,IAAKG,OAAO,SAASC,IAAI,uBAC/CR,EAASd,MAEXgB,EAAIX,OAAS,IAAMU,GAClB,YAAC,WAAD,wBC4BKQ,EApCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UAAWjB,EAA/B,EAA+BA,YAA/B,OACZ,YAAC,IAAD,CAAQe,SAAUA,EAAU/B,MAAOiC,GACjC,wBACGD,EAAMZ,KAAI,YAAe,IAAZc,EAAW,EAAXA,KACNlC,EAAQkC,EAAKlC,OAASkC,EAAKC,KAC3BpC,EAAWmC,EAAKnC,UAAY,GAClC,OACE,YAAC,WAAD,CAAUyB,IAAKU,EAAKC,MAClB,YAAC,IAAD,CAAKnC,MAAM,OAAOD,SAAUA,IAC5B,uBACE,YAAC,IAAOqC,GAAR,CACEnB,IAAKA,YAAI,CACPoB,GAAI,KAGN,YAAC,IAAOX,EAAR,CACEY,GAAIC,IACJtB,IAAG,YAAE,CACHuB,eAAe,QADd,IAGHC,GAAIP,EAAKC,MAERnC,IAGL,yBAAQkC,EAAKQ,MACb,YAAC,IAAOC,EAAR,KAAWT,EAAKU,eAM1B,YAAC,EAAD,CAAQ5B,YAAaA,MCpCV,8BACb6B,YAAeb,EADF,EACEA,MAAOC,EADT,EACSA,UAAWjB,EADpB,EACoBA,YACjCe,EAFa,EAEbA,SAFa,OAIb,YAAC,EAAD,CACEA,SAAUA,EACVC,MAAOA,EACPC,UAAWA,EACXjB,YAAaA","file":"component---node-modules-gatsby-theme-blog-src-templates-posts-js-d5167c487d955c5fe789.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    {socialLinks.map((platform, i, arr) => (\n      <Fragment key={platform.url}>\n        <Styled.a href={platform.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {platform.name}\n        </Styled.a>\n        {arr.length - 1 !== i && (\n          <Fragment>\n            {` `}&bull;{` `}\n          </Fragment>\n        )}\n      </Fragment>\n    ))}\n  </footer>\n)\nexport default Footer\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Styled, css } from \"theme-ui\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Footer from \"../components/home-footer\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <main>\n      {posts.map(({ node }) => {\n        const title = node.title || node.slug\n        const keywords = node.keywords || []\n        return (\n          <Fragment key={node.slug}>\n            <SEO title=\"Home\" keywords={keywords} />\n            <div>\n              <Styled.h2\n                css={css({\n                  mb: 1,\n                })}\n              >\n                <Styled.a\n                  as={Link}\n                  css={{\n                    textDecoration: `none`,\n                  }}\n                  to={node.slug}\n                >\n                  {title}\n                </Styled.a>\n              </Styled.h2>\n              <small>{node.date}</small>\n              <Styled.p>{node.excerpt}</Styled.p>\n            </div>\n          </Fragment>\n        )\n      })}\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import React from \"react\"\n\nimport Posts from \"../components/posts\"\n\nexport default ({\n  pathContext: { posts, siteTitle, socialLinks },\n  location,\n}) => (\n  <Posts\n    location={location}\n    posts={posts}\n    siteTitle={siteTitle}\n    socialLinks={socialLinks}\n  />\n)\n"],"sourceRoot":""}