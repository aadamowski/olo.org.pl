{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-title.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-date.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-hero.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","SEO","description","lang","meta","keywords","title","imageSource","imageAlt","site","useStaticQuery","metaDescription","siteMetadata","image","siteUrl","imageAltText","htmlAttributes","titleTemplate","content","property","author","concat","join","defaultProps","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","PostTitle","h1","PostDate","sx","fontSize","mt","mb","Footer","previous","next","css","pt","hr","as","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel","Hero","post","childImageSharp","fluid","alt","excerpt","Post","data","location","socialImage","src","date","body","PostPage","blogPost"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,mBCLfE,EAAOC,QAJP,WACE,MAAM,IAAIC,UAAU,0I,mBCGtBF,EAAOC,QAJP,SAA0BE,GACxB,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,qBCD1F,IAAIM,EAAmB,EAAQ,QAM/BT,EAAOC,QAJP,SAA4BS,GAC1B,GAAIH,MAAMI,QAAQD,GAAM,OAAOD,EAAiBC,K,qBCHlD,IAAIE,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhCf,EAAOC,QAJP,SAA4BS,GAC1B,OAAOE,EAAkBF,IAAQG,EAAgBH,IAAQI,EAA2BJ,IAAQK,M,mBCT9F,SAASC,EAAgBC,EAAGC,GAM1B,OALAlB,EAAOC,QAAUe,EAAkBV,OAAOa,gBAAkB,SAAyBF,EAAGC,GAEtF,OADAD,EAAEG,UAAYF,EACPD,GAGFD,EAAgBC,EAAGC,GAG5BlB,EAAOC,QAAUe,G,mBCCjBhB,EAAOC,QAVP,SAA2BS,EAAKW,IACnB,MAAPA,GAAeA,EAAMX,EAAIY,UAAQD,EAAMX,EAAIY,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIjB,MAAMc,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKb,EAAIa,GAGhB,OAAOC,I,woBCPT,IAAMC,EAAQ1B,EAAd,QACQ2B,EAAQ3B,EAAQ,QAAhB2B,IACAC,EAAgB5B,EAAQ,QAAxB4B,YAER3B,UAAiB,SAAqB,GAIlC,IAHF4B,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,0BACKC,EAAWJ,EADhB,GAIKK,EAAMP,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,OAJF,GAQMQ,EAAO5B,YAAb,GACM6B,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACR,EAlBJ,IAoBA,OAAOJ,uBAAP,M,qBChCF,IAAIhB,EAAmB,EAAQ,QAW/BT,EAAOC,QATP,SAAqCgB,EAAGqB,GACtC,GAAKrB,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOR,EAAiBQ,EAAGqB,GACtD,IAAIC,EAAIjC,OAAOkC,UAAUC,SAASC,KAAKzB,GAAG0B,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBtB,EAAE2B,cAAaL,EAAItB,EAAE2B,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBhC,MAAMC,KAAKS,GACxC,cAANsB,GAAqB,2CAA2CO,KAAKP,GAAW9B,EAAiBQ,EAAGqB,QAAxG,K,mBCKFtC,EAAOC,QAbP,WACE,GAAuB,oBAAZ8C,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKX,UAAUC,SAASC,KAAKK,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOC,GACP,OAAO,K,kCCTX,2DAYA,SAASC,EAAT,GAQI,IAPFC,EAOC,EAPDA,YACAC,EAMC,EANDA,KACAC,EAKC,EALDA,KAKC,IAJDC,gBAIC,MAJU,GAIV,EAHDC,EAGC,EAHDA,MACAC,EAEC,EAFDA,YACAC,EACC,EADDA,SAEQC,EAASC,YAAe,aAAxBD,KAeFE,EAAkBT,GAAeO,EAAKG,aAAaV,YACnDW,EAAQN,EAAW,GAClBE,EAAKG,aAAaE,QAAUP,EAC/B,KACEQ,EAAeP,GAAYG,EAEjC,OACE,YAAC,IAAD,CACEK,eAAgB,CACdb,QAEFG,MAAOA,EACPW,cAAa,QAAUR,EAAKG,aAAaN,MACzCF,KAAM,CACJ,CACEX,KAAK,cACLyB,QAASP,GAEX,CACElB,KAAK,WACLyB,QAASL,GAEX,CACEpB,KAAK,eACLyB,QAASH,GAEX,CACEI,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACEzB,KAAK,gBACLyB,QAASL,GAEX,CACEpB,KAAK,oBACLyB,QAASH,GAEX,CACEtB,KAAK,eACLyB,QAAQ,uBAEV,CACEzB,KAAK,kBACLyB,QAAST,EAAKG,aAAaQ,QAE7B,CACE3B,KAAK,gBACLyB,QAASZ,GAEX,CACEb,KAAK,sBACLyB,QAASP,IAGVU,OACChB,EAASnC,OAAS,EACd,CACEuB,KAAK,WACLyB,QAASb,EAASiB,KAAT,OAEX,IAELD,OAAOjB,KAKhBH,EAAIsB,aAAe,CACjBpB,KAAK,KACLC,KAAM,GACNC,SAAU,IAYGJ,O,qBC/Hf,IAAIlC,EAAiB,EAAQ,QAEzByD,EAA2B,EAAQ,QAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAbIJ,IACF5E,EAAOC,QAAU4E,EAAa9B,QAAQC,UAEtChD,EAAOC,QAAU4E,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAO7D,EAAeiE,EAAUJ,EAAMxC,WACnC4C,GAIJP,EAAWM,MAAM,KAAMI,WAGhCvF,EAAOC,QAAU4E,G,0IChBFW,EAFG,SAAA1D,GAAK,OAAI,YAAC,IAAO2D,GAAO3D,I,YCW3B4D,EAXE,SAAA5D,GAAK,OACpB,YAAC,IAAOZ,EAAR,aACEyE,GAAI,CACFC,SAAU,EACVC,IAAK,EACLC,GAAI,IAEFhE,K,wBCkCOiE,EAtCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACb,sBACEC,IAAKA,YAAI,CACPL,GAAI,EACJM,GAAI,KAGN,YAAC,IAAOC,GAAR,MACA,YAAC,IAAD,OACEJ,GAAYC,IACZ,YAAC,IAAD,CACEI,GAAG,KACHH,IAAKA,YAAI,CACPI,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAGX,sBACGT,GACC,YAAC,IAAOf,EAAR,CAAUoB,GAAIK,IAAMC,GAAIX,EAASY,KAAMC,IAAI,QAA3C,KACKb,EAAStC,QAIlB,sBACGuC,GACC,YAAC,IAAOhB,EAAR,CAAUoB,GAAIK,IAAMC,GAAIV,EAAKW,KAAMC,IAAI,QACpCZ,EAAKvC,MADR,U,qBCpBGoD,EAXF,SAAC,GAAD,MAAGC,EAAH,EAAGA,KAAH,OACX,+BACGA,SAAA,UAAAA,EAAM9C,aAAN,eAAa+C,kBACZ,YAAC,IAAD,CACEC,MAAOF,EAAK9C,MAAM+C,gBAAgBC,MAClCC,IAAKH,EAAKnD,SAAWmD,EAAKnD,SAAWmD,EAAKI,YCoCnCC,EAjCF,SAAC,GAAD,gBACXC,KACEN,EAFS,EAETA,KAEkBrD,EAJT,EAGTG,KACEG,aAAgBN,MAGpB4D,EAPW,EAOXA,SACAtB,EARW,EAQXA,SACAC,EATW,EASXA,KATW,OAWX,YAAC,IAAD,CAAQqB,SAAUA,EAAU5D,MAAOA,GACjC,YAAC,IAAD,CACEA,MAAOqD,EAAKrD,MACZJ,YAAayD,EAAKI,QAClBxD,YACEoD,EAAKQ,YAAL,UACIR,EAAKQ,mBADT,iBACI,EAAkBP,uBADtB,aACI,EAAmCC,MAAMO,IAD7C,UAEIT,EAAK9C,aAFT,iBAEI,EAAY+C,uBAFhB,aAEI,EAA6BC,MAAMO,IAEzC/D,SAAUsD,EAAKtD,SACfG,SAAUmD,EAAKnD,WAEjB,wBACE,YAAC,EAAD,CAAUmD,KAAMA,IAChB,YAAC,EAAD,KAAYA,EAAKrD,OACjB,YAAC,EAAD,KAAWqD,EAAKU,MAChB,YAAC,cAAD,KAAcV,EAAKW,OAErB,YAAC,EAAe,CAAE1B,WAAUC,W,ykBCrCjB0B,UCAA,YAAyB,IAAtBL,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KAClBO,EAA6BP,EAA7BO,SAAU5B,EAAmBqB,EAAnBrB,SAAUC,EAASoB,EAATpB,KAE5B,OACE,YAAC,EAAD,CACEoB,KAAI,OAAOA,GAAP,IAAaN,KAAMa,IACvBN,SAAUA,EACVtB,SAAUA,EACVC,KAAMA","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-dde0bc95f5a40a58d086.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n  imageSource,\n  imageAlt,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `og:image`,\n          content: image,\n        },\n        {\n          name: `og:image:alt`,\n          content: imageAltText,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:image`,\n          content: image,\n        },\n        {\n          name: `twitter:image:alt`,\n          content: imageAltText,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n}\n\nexport default SEO\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = props => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = props => (\n  <Styled.p\n    sx={{\n      fontSize: 1,\n      mt: -3,\n      mb: 3,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\nimport Bio from \"../components/bio\"\n\nconst Footer = ({ previous, next }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    <Styled.hr />\n    <Bio />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport Image from \"gatsby-image\"\n\nconst Hero = ({ post }) => (\n  <>\n    {post?.image?.childImageSharp && (\n      <Image\n        fluid={post.image.childImageSharp.fluid}\n        alt={post.imageAlt ? post.imageAlt : post.excerpt}\n      />\n    )}\n  </>\n)\n\nexport default Hero\n","import React from \"react\"\n\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport PostTitle from \"./post-title\"\nimport PostDate from \"./post-date\"\nimport PostFooter from \"./post-footer\"\nimport PostHero from \"./post-hero\"\n\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n  previous,\n  next,\n}) => (\n  <Layout location={location} title={title}>\n    <SEO\n      title={post.title}\n      description={post.excerpt}\n      imageSource={\n        post.socialImage\n          ? post.socialImage?.childImageSharp?.fluid.src\n          : post.image?.childImageSharp?.fluid.src\n      }\n      keywords={post.keywords}\n      imageAlt={post.imageAlt}\n    />\n    <main>\n      <PostHero post={post} />\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{post.date}</PostDate>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n    <PostFooter {...{ previous, next }} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAlt\n      socialImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n"],"sourceRoot":""}