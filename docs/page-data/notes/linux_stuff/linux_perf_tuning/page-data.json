{"componentChunkName":"component---node-modules-gatsby-theme-notes-src-templates-note-js","path":"/notes/linux_stuff/linux_perf_tuning","result":{"data":{"note":{"id":"fe2412af-1957-529b-870e-827c499e1337","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"random-linux-performance-analysis-and-tuning-notes\"\n  }, \"Random Linux performance analysis and tuning notes\"), mdx(\"p\", null, \"Time the syscalls:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"strace -c\\n\")), mdx(\"p\", null, \"Sizes and utilization of kernel caches, to see which might need raising limits:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"slabtop -o -s -c\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Steal in \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"atop\"), \" is bad\")), mdx(\"p\", null, \"Major page fault counters per process:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"ps -e -o maj_flt,comm | sort -n | tail\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Aleksander Adamowski"}}},"pageContext":{"id":"fe2412af-1957-529b-870e-827c499e1337","parent":{"name":"linux_perf_tuning","base":"linux_perf_tuning.mdx","relativePath":"linux_stuff/linux_perf_tuning.mdx","sourceInstanceName":"content/notes"},"title":"linux_perf_tuning"}},"staticQueryHashes":["386998304","4198970465"]}